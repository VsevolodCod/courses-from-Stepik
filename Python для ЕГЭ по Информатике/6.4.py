# Выберите все функции, с помощью которых можно переводить число из одной системы счисления в другую.
# int()
# oct()
# bin()
# hex()



# Выберите все правильные утверждения про символы 0o в приведённой ниже строке?
# s = '0o123456'

# Это префикс, обозначающий, что число записано в восьмеричной системе счисления
# Эти два символа можно удалить, использовав срез [2:]


# Выберите все правильные утверждения про функцию int()
# С помощью функции int() можно переводить число из допустимой системы счисления в десятичную
# С помощью функции int() можно переводить число из строкового представления в числовое




# алфавита 10-ичной системы счисления. Определите минимальное значение x, при котором значение данного арифметического выражения кратно 14. Для найденного x вычислите частное от деления значения арифметического выражения на 14 и укажите его в ответе в десятичной системе счисления.
# for x in '0123456789':
#     a = int("98" + x + "123", 19)
#     b = int("111" + x + "222", 19)
#     if (a + b) % 14 == 0:
#         print((a +b)//14)


# Операнды арифметического выражения записаны в системах счисления с различными основаниями.84x9999 14 +1x765 16
# В записи чисел переменной x обозначена неизвестная цифра из алфавита 10-ичной системы счисления. Определите все значения x, при котором значение данного арифметического выражения кратно 6. Найдите сумму всех таких арифметических выражений и в качестве ответа укажите произведение ненулевых цифр этой суммы.
# s = 1
# k = 0
# for x in '0123456789':
#     a = int("84" + x + "9999", 14)
#     b = int("1" + x + "765", 16)
#     if (a + b) % 6 == 0:
#         k += (a + b)
# for i in  (str(k)):
#     if (int(i)) != 0:
#         s *= int(i)
# print(s)







# Операнды арифметического выражения записаны в системах счисления с различными основаниями.
# 7yx777 13 +6x66y6 17
# В записи чисел переменными х и y обозначены неизвестные цифры из алфавита 
# 10-ичной системы счисления. Определите все x и y, при которых значение данного выражения кратно 
# 16. В ответе укажите сумму всех значений таких выражений в десятичной системе счисления. Основание системы счисления в ответе указывать не нужно.
# k = 0
# for x in '0123456789':
#     for y in '0123456789':
#         a = int('7' + y + x + '777' ,13)
#         b = int('6' + x + '66' + y + '6', 17)
#         if (a + b) % 16 == 0:
#             k += (a+b)
# print(k)




# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1. Строится двоичная запись числа N.
# 2. К этой записи справа дописываются два нуля
# 3. Слева к этой записи дописывается 1.
# Полученная таким образом запись является двоичной записью искомого числа R.
# 4. Результат переводится в десятичную систему и выводится на экран.
# Укажите минимальное число N, при котором результат выполнения программы превышает число 400.
# В ответе запишите это число в десятичной системе счисления.
# for n in range (1 , 100+1):
#     n_2= bin(n)[2:] 
#     n_2=  n_2 + "00"
#     n_2 = "1" + n_2
#     r = int(n_2, 2)
#     if r > 400:
#         print(n)
#         break



# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1. Строится двоичная запись числа N.
# 2. К этой записи справа дописываются две цифры по следующему правилу:
# а) если в двоичной записи числа n количество единиц больше, чем количество нулей, то дописываются два нуля.
# б) Если больше нулей, то дописываются две единицы.
# в) если количество нулей и единиц совпадает, то дописывается сначала 1, а затем 0.
# Полученная таким образом запись является двоичной записью искомого числа R.
# 3. Результат переводится в десятичную систему и выводится на экран.
# Укажите максимальное число N, при котором результат выполнения программы не превышает число 1000.
# В ответе запишите это число в десятичной системе счисления.
# for n in range(1000,1,-1):
#     n_2 = bin(n)[2:]
#     if n_2.count('1') > n_2.count('0'):
#         n_2 = n_2 + "00"
#     elif n_2.count('1') < n_2.count('0'):
#         n_2 = n_2 + "11"
#     else:
#         n_2 = n_2 + "10"
#     r = int(n_2, 2)
#     if r <= 1000:
#         print(n)
#         break





# На вход алгоритма подаётся натуральное число N > 10. Алгоритм строит по нему новое число R следующим образом.
# 1. Строится двоичная запись числа N.
# 2. Последние две цифры меняются на 11
# 3. К этой записи слева дописываются 11
# 4. Вторая и третья цифры меняются на нули.
# Полученная таким образом запись является двоичной записью искомого числа R.5. Результат переводится в десятичную систему и выводится на экран.
# Укажите минимальное число N, при котором результат выполнения программы превышает число 42.
# В ответе запишите это число в десятичной системе счисления.
# for n in range (11 , 1000):
#     n_2 = bin(n)[2:]
#     n_2 = n_2[:-2] + "11"
#     n_2 = "11" + n_2
#     n_2 = n_2[0] + "0" + "0" + n_2[3:]
#     r = int(n_2, 2)
#     if r > 42:
#         print(n)
#         break
    

